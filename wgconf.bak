#!/bin/bash
#
#
# splitconf : Usage :  
#                     wgconf split/join p1 p2 p3 p4 p5
#                     split :  p1 = name of wireguard conf file without the extension.  
#                     
#                              E.g. wgconf split mywgintfc
#
#                     join  :  p1=top_file, p2=middle_file, p3=bottom_file
#                              p4=outfile (full name)
#                              p5='stripcomments' ... any string will trigger comments to be stripped
#      files : 



function Split {

    WGNAME=$2

    FSRC="${WGNAME}.conf"
    if [ ! -f $FSRC ]; then echo "Source file $FSRC is missing" ; exit 1 ; fi

    FTOP="${WGNAME}.top"
    FMID="${WGNAME}.mid"
    FBOT="${WGNAME}.bot"

    # clear the files we will be writing to
    printf "" > $FTOP
    printf "" > $FMID
    printf "" > $FBOT
    # start off at the top ...
    outfil=$FTOP
    while IFS= read -r line
    do
        # first instance of [Peer] will reset the output file
        if grep -q "\[Peer\]" <<< "$line"; then outfil=$FBOT ; fi
        # ... but if the interface section comes after a few peers, we need to reset the file again
        if grep -q "\[Interface\]" <<< "$line"; then outfil=$FTOP ; fi

        # set the file to send the line to ...
        dumpfil=$outfil

        # check if it is a PostUp/PostDown command --- those are server specific
        if grep -q "PostUp" <<< "$line"; then dumpfil=$FMID ; fi
        if grep -q "PostDown" <<< "$line"; then dumpfil=$FMID ; fi

        # write the line out
        echo "$line" >> $dumpfil
    done < "$FSRC"

}

function Join {
    if [ ! -f $2 ]; then echo "TOP file $2 missing"; exit 1; fi
    if [ ! -f $3 ]; then echo "MID file $3 missing"; exit 1; fi
    if [ ! -f $4 ]; then echo "BOT file $4 missing"; exit 1; fi
    if [ "$5" = "" ]; then echo "OUTPUT FILE!!!???!?"; exit 1; fi
    cat $2 $3 $4 > $5
    #if grep -q -i "stripcomments" <<< $6
    if [ ! "$6" = "" ] # any string triggers comments to be stripped
    then
        # adapted from https://unix.stackexchange.com/questions/157328/how-can-i-remove-all-comments-from-a-file
        tmpout="$(mktemp)"
        grep -o '^[^#]*' $5 > $tmpout ; rm $5 ; mv $tmpout $5
    fi
}

if grep -q -i "split" <<< "$1" 
then
    Split $@
elif grep -q -i "join" <<< "$1" 
then
    Join $@
else
    echo "Unknown option ... "
    echo "******************************************************************************************"
    echo " Usage :  "
    echo "         $0 split/join p1 p2 p3 p4 p5"
    echo "         "
    echo "         split :  p1 = name of wireguard conf file without the extension."
    echo "                       output files created with .top, .mid and .bot extensions"
    echo "         "
    echo "                       E.g. wgconf split mywgintfc"
    echo ""
    echo "         join  :  p1=top_filename, p2=mid_filename, p3=bot_filename"
    echo "                  p4=outfilename"
    echo "                  p5='stripcomments' ... any string will trigger comments to be stripped"
    echo "******************************************************************************************"
    exit 1
fi


